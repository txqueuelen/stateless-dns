replicaCount: 2
imagePullSecrets:
  - name: regcred
  - name: regcred2
nameOverride: ""
fullNameOverride: ""

serviceAccount:
  create: true
  annotations:
    annotatnio-aws-iam: why-i-am-like-this
  name: alternative-name

rbac:
  create: true

podAnnotations:
  prometheus.io/scrape: "true"

podSecurityContext:
  fsGroup: 2000

deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 3
    maxUnavailable: 2

priorityClassName: system-node-critical

hostNetwork: false

dnsPolicy: ClusterFirst

service:
  api:
    enabled: true
    type: ClusterIP
    port: 80
    annotations:
      service-annotation: api

  dnsUdp:
    enabled: true
    type: ClusterIP
    port: 53
    annotations:
      service-annotation: dnsUdp

  dnsTcp:
    enabled: true
    type: ClusterIP
    port: 53
    annotations:
      service-annotation: dnsTcp

  externalDNSMetrics:
    enabled: true
    type: ClusterIP
    port: 80
    annotations:
      prometheus.io/scrape: "true"

ingress:
  enabled: true
  className: default
  annotations:
    somthing-with-cert-manager: a-issuer
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: chart-example-tls
      hosts:
        - chart-example.local

externalDNS:
  nameOverride: ""
  fullnameOverride: ""

  registry: registry.k8s.io
  repository: external-dns/external-dns
  tag: v0.13.1
  pullPolicy: IfNotPresent

  securityContext:
    runAsNonRoot: true
    runAsUser: 65534
    readOnlyRootFilesystem: true
    capabilities:
      drop: ["ALL"]

  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 256Mi

  sources:
    - ambassador-host
    - contour-httpproxy
    - contour-ingressroute
    - crd
    - gloo-proxy
    - ingress
    - istio-gateway
    - istio-virtualservice
    - kong-tcpingress
    - node
    - openshift-route
    - pod
    - service
    - skipper-routegroup

  logLevel: info
  logFormat: text
  interval: 30s
  triggerLoopOnEvent: true
  policy: sync
  txtOwnerId: "helm-ci-test"
  # txtPrefix: "prefix-"
  txtSuffix: "-suffix"  # txt-prefix and txt-suffix are mutual exclusive
  txtWildcardReplacement: "wildcard-"
  managedRecordTypes: A,CNAME,NS

pdns:
  nameOverride: ""
  fullnameOverride: ""

  registry: ghcr.io
  repository: txqueuelen/stateless-dns
  tag: ci  # We are going to test always with the version built or the latest stable
  pullPolicy: IfNotPresent

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      add:
      - NET_BIND_SERVICE
      drop:
      - all
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 256Mi

  apiKeySecret:
    create: true
    annotations:
      something-gcp-iam-magic: inject-here-secret-or-something
    name: a-different-name
    key: a-key
    valueBase64: ""
    valuePlain: ThisIsSecret

  extraArgs:
    - --allow-notify-from=0.0.0.0/0,::/0
    - --also-notify=8.8.8.8,8.8.4.4
    - --loglevel=7  # In case something fails, we are not blind.

zones:
  test.es: |
    $ORIGIN .
    test.es   300  IN SOA       ns1.test.es sysadmin.test.es 1 600 600 86400 300
    test.es   300  IN NS	      ns1.test.es
    test.es   300  IN NS	      ns2.test.es
    test.es   300  IN MX	  10  mx.test.es
  test.dev: |
    $ORIGIN .
    test.dev   300  IN SOA      ns1.test.dev sysadmin.test.dev 1 600 600 86400 300
    test.dev   300  IN NS	      ns1.test.dev
    test.dev   300  IN NS	      ns2.test.dev
    test.dev   300  IN MX	  10  mx.test.dev

# We are not testing nodeSelector, toleration or affinity because it could fail to deploy in the CI.
# We have to trust that this part works.
nodeSelector: {}
tolerations: []
affinity: {}
