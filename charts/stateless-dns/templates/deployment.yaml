apiVersion: apps/v1
kind: Deployment
metadata:
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  name: {{ include "stateless-dns.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "stateless-dns.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "stateless-dns.selectorLabels" . | nindent 6 }}
  {{- with .Values.deploymentStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        checksum/apikey-secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        checksum/zones: {{ include (print $.Template.BasePath "/zones-configmap.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/config-configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "stateless-dns.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "stateless-dns.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.hostNetwork }}
      hostNetwork: {{ . }}
      {{- end }}
      {{- if and .Values.hostNetwork (not .Values.dnsPolicy) }}
      dnsPolicy: ClusterFirstWithHostNet
      {{- else if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      initContainers:
        # Populate PowerDNS zones
        - name: zone-populator
          image: "{{ .Values.pdns.image.registry }}/{{ .Values.pdns.image.repository }}:{{ .Values.pdns.image.tag }}"
          imagePullPolicy: {{ .Values.pdns.pullPolicy }}
          {{- with .Values.pdns.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command:
            - /bin/bash
            - /usr/local/bin/zone-populator.sh
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /usr/local/etc/pdns.conf
              name: config
              subPath: pdns.conf
            - mountPath: /zones
              name: zones

      containers:
        # external-dns container
        - name: external-dns
          image: "{{ .Values.externalDNS.image.registry }}/{{ .Values.externalDNS.image.repository }}:{{ .Values.externalDNS.image.tag }}"
          imagePullPolicy: {{ .Values.externalDNS.pullPolicy }}
          {{- with .Values.externalDNS.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - --log-level={{ .Values.externalDNS.logLevel }}
            - --log-format={{ .Values.externalDNS.logFormat }}

            - --interval={{ .Values.externalDNS.interval }}
            {{- if .Values.externalDNS.triggerLoopOnEvent }}
            - --events
            {{- end }}

            {{- range .Values.externalDNS.sources }}
            - --source={{ . }}
            {{- end }}
            {{- range $zonename, $zonefile := .Values.zones }}
            - --domain-filter={{ $zonename }}
            {{- end }}
            {{- range .Values.externalDNS.managedRecordTypes }}
            - --managed-record-types={{ . }}
            {{- end }}
 
            - --registry=txt
            {{- with .Values.externalDNS.txtOwnerId }}
            - --txt-owner-id={{ . }}
            {{- end }}
            {{- with .Values.externalDNS.txtPrefix }}
            - --txt-prefix={{ . }}
            {{- end }}
            {{- with .Values.externalDNS.txtSuffix }}
            - --txt-suffix={{ . }}
            {{- end }}
            {{- with .Values.externalDNS.txtWildcardReplacement }}
            - --txt-wildcard-replacement={{ . }}
            {{- end }}

            - --provider=pdns
            {{- if .Values.service.api.enabled }}
            - --pdns-server=http://localhost:{{ .Values.service.api.port }}
            {{- end }}

            - --pdns-api-key=$(POWERDNS_API_KEY)

            {{- range .Values.externalDNS.extraArgs }}
            - {{ . }}
            {{- end }}
          ports:
            - name: metrics-http
              protocol: TCP
              containerPort: 7979
          env:
            - name: "POWERDNS_API_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ include "stateless-dns.secret.name" . }}
                  key: {{ include "stateless-dns.secret.key" . }}
          resources:
            {{- toYaml .Values.externalDNS.resources | nindent 12 }}

        # PowerDNS container
        - name: pdns
          image: "{{ .Values.pdns.image.registry }}/{{ .Values.pdns.image.repository }}:{{ .Values.pdns.image.tag }}"
          imagePullPolicy: {{ .Values.pdns.pullPolicy }}
          {{- with .Values.pdns.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            {{- if .Values.service.api.enabled }}
            - --api-key=$(POWERDNS_API_KEY)
            {{- end }}
            {{- range $arg := .Values.pdns.extraArgs }}
            - {{ $arg }}
            {{- end }}
          {{- if or .Values.service.api.enabled .Values.service.dnsUdp.enabled .Values.service.dnsTcp.enabled }}
          ports:
            {{- if .Values.service.dnsTcp.enabled }}
            - name: dns-tcp
              protocol: TCP
              containerPort: {{ .Values.service.dnsTcp.port }}
            {{- end }}
            {{- if .Values.service.dnsUdp.enabled }}
            - name: dns-udp
              protocol: UDP
              containerPort: {{ .Values.service.dnsUdp.port }}
            {{- end }}
            {{- if .Values.service.api.enabled }}
            - name: http
              protocol: TCP
              containerPort: {{ .Values.service.api.port }}
            {{- end }}
          {{- end }}
          env:
            - name: "POWERDNS_API_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ include "stateless-dns.secret.name" . }}
                  key: {{ include "stateless-dns.secret.key" . }}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /usr/local/etc/pdns.conf
              name: config
              subPath: pdns.conf
          resources:
            {{- toYaml .Values.pdns.resources | nindent 12 }}

      volumes:
        - name: data
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "stateless-dns.fullname.withSuffix" ( dict "context" . "suffix" "config" ) }}
        - name: zones
          configMap:
            name: {{ include "stateless-dns.fullname.withSuffix" ( dict "context" . "suffix" "zones" ) }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
